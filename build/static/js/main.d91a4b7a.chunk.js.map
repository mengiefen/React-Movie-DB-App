{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","context.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/Rate/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","components/Login.styles.js","components/Login.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Context","createContext","UserProvider","children","useState","undefined","state","setState","Provider","value","Header","useContext","user","console","log","to","src","RMDBLogo","alt","username","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","image","Text","HeroImage","title","text","Grid","header","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","Rate","setValue","min","max","e","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","Login","setUsername","setPassword","setUser","navigate","useNavigate","handleSubmit","session_id","handleInput","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d91a4b7a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: var(--maxWidth);\n  padding: 20px 0;\n  margin: 0 auto;\n  color: var(--white);\n\n  a {\n    color: var(--white);\n    text-decoration: none;\n  }\n`;\n\nexport const LogoImg = styled.img`\n  width: 200px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n  }\n`;\n\nexport const TMDBLogoImg = styled.img`\n  width: 100px;\n\n  @media screen and (max-width: 500px) {\n    width: 80px;\n  }\n`;\n","import React, { useState, createContext } from 'react';\n\nexport const Context = createContext();\n\nconst UserProvider = ({ children }) => {\n  const [state, setState] = useState(undefined);\n\n  return (\n    <Context.Provider value={[state, setState]}>{children}</Context.Provider>\n  );\n};\n\nexport default UserProvider;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport RMDBLogo from '../../images/react-movie-logo.svg';\nimport TMDBLogo from '../../images/tmdb_logo.svg';\n\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from './Header.styles';\n// Context\nimport { Context } from '../../context';\n\nconst Header = () => {\n  const [user] = useContext(Context);\n  console.log(user);\n\n  return (\n    <Wrapper>\n      <Content>\n        <Link to='/'>\n          <LogoImg src={RMDBLogo} alt='rmdb-logo' />\n        </Link>\n        {user ? (\n          <span>Logged in as: {user.username}</span>\n        ) : (\n          <Link to='/login'>\n            <span>Log in</span>\n          </Link>\n        )}\n        <TMDBLogoImg src={TMDBLogo} alt='tmdb-logo' />\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default Header;\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background: linear-gradient(\n      to bottom,\n      rgba(0, 0, 0, 0) 41%,\n      rgba(0, 0, 0, 0.65) 100%\n    ),\n    url(${({ image }) => image}), var(--darkGrey);\n  background-size: 100%, cover;\n  background-position: center;\n  height: 600px;\n  position: relative;\n  animation: animateHeroImage 1s;\n\n  @keyframes animateHeroImage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  padding: 20px;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n`;\n\nexport const Text = styled.div`\n  z-index: 100;\n  max-width: 700px;\n  position: absolute;\n  bottom: 40px;\n  margin-right: 20px;\n  min-height: 100px;\n  color: var(--white);\n\n  h1 {\n    font-size: var(--fontSuperBig);\n\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontBig);\n    }\n  }\n\n  p {\n    font-size: var(--fontMed);\n\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontSmall);\n    }\n  }\n\n  @media screen and (max-width: 720px) {\n    max-width: 100%;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Styles\nimport { Wrapper, Content, Text } from './HeroImage.styles';\n\nconst HeroImage = ({ image, title, text }) => (\n  <Wrapper image={image}>\n    <Content>\n      <Text>\n        <h1>{title}</h1>\n        <p>{text}</p>\n      </Text>\n    </Content>\n  </Wrapper>\n);\n\nHeroImage.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  text: PropTypes.string\n};\n\nexport default HeroImage;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n  padding: 0 20px;\n\n  h1 {\n    color: var(--medGrey);\n\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 2rem;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Styles\nimport { Wrapper, Content } from './Grid.styles';\n\nconst Grid = ({ header, children }) => (\n  <Wrapper>\n    <h1>{header}</h1>\n    <Content>{children}</Content>\n  </Wrapper>\n);\n\nGrid.propTypes = {\n  header: PropTypes.string\n};\n\nexport default Grid;\n","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 100%;\n  max-width: 720px;\n  transition: all 0.3s;\n  object-fit: cover;\n  border-radius: 20px;\n  animation: animateThumb 0.5s;\n\n  :hover {\n    opacity: 0.8;\n  }\n\n  @keyframes animateThumb {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n// Styles\nimport { Image } from './Thumb.styles';\n\nconst Thumb = ({ image, movieId, clickable }) => (\n  <div>\n    {clickable ? (\n      <Link to={`/${movieId}`}>\n        <Image src={image} alt='movie-thumb' />\n      </Link>\n    ) : (\n      <Image src={image} alt='movie-thumb' />\n    )}\n  </div>\n);\n\nThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool\n};\n\nexport default Thumb;\n","import { Spinner } from './Spinner.styles';\n\nexport default Spinner;\n","import styled from 'styled-components';\n\nexport const Spinner = styled.div`\n  border: 5px solid var(--lightGrey);\n  border-top: 5px solid var(--medGrey);\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  max-width: var(--maxWidth);\n  width: 100%;\n  height: 55px;\n  background: var(--medGrey);\n  margin: 0 auto;\n  border-radius: 40px;\n  color: var(--white);\n\n  img {\n    position: absolute;\n    left: 15px;\n    top: 14px;\n    width: 30px;\n  }\n\n  input {\n    font-size: var(--fontBig);\n    position: absolute;\n    left: 0;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: var(--white);\n\n    :focus {\n      outline: none;\n    }\n  }\n`;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n// Image\nimport searchIcon from '../../images/search-icon.svg';\n// Styles\nimport { Wrapper, Content } from './SearchBar.styles';\n\nconst SearchBar = ({ setSearchTerm }) => {\n  const [state, setState] = useState('');\n  const initial = useRef(true);\n\n  useEffect(() => {\n    if (initial.current) {\n      initial.current = false;\n      return;\n    }\n\n    const timer = setTimeout(() => {\n      setSearchTerm(state);\n    }, 500);\n\n    return () => clearTimeout(timer);\n  }, [setSearchTerm, state]);\n\n  return (\n    <Wrapper>\n      <Content>\n        <img src={searchIcon} alt='search-icon' />\n        <input\n          type='text'\n          placeholder='Search Movie'\n          onChange={event => setState(event.currentTarget.value)}\n          value={state}\n        />\n      </Content>\n    </Wrapper>\n  );\n};\n\nSearchBar.propTypes = {\n  callback: PropTypes.func\n};\n\nexport default SearchBar;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.button`\n  display: block;\n  background: var(--darkGrey);\n  width: 25%;\n  min-width: 200px;\n  height: 60px;\n  border-radius: 30px;\n  color: var(--white);\n  border: 0;\n  font-size: var(--fontBig);\n  margin: 20px auto;\n  transition: all 0.3s;\n  outline: none;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Styles\nimport { Wrapper } from './Button.styles';\n\nconst Button = ({ text, callback }) => (\n  <Wrapper type='button' onClick={callback}>\n    {text}\n  </Wrapper>\n);\n\nButton.propTypes = {\n  text: PropTypes.string,\n  callback: PropTypes.func\n};\n\nexport default Button;\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  return formatter.format(money);\n};\n\nexport const isPersistedState = stateName => {\n  const sessionState = sessionStorage.getItem(stateName);\n  return sessionState && JSON.parse(sessionState);\n};\n","import { useState, useEffect } from 'react';\n// API\nimport API from '../API';\n// Helpers\nimport { isPersistedState } from '../helpers';\n\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0\n};\n\nexport const useHomeFetch = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n\n  const fetchMovies = async (page, searchTerm = '') => {\n    try {\n      setError(false);\n      setLoading(true);\n\n      const movies = await API.fetchMovies(searchTerm, page);\n\n      setState(prev => ({\n        ...movies,\n        results:\n          page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n      }));\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false);\n  };\n\n  // Search and initial\n  useEffect(() => {\n    if (!searchTerm) {\n      const sessionState = isPersistedState('homeState');\n\n      if (sessionState) {\n        console.log('Grabbing from sessionStorage');\n        setState(sessionState);\n        return;\n      }\n    }\n    console.log('Grabbing from API');\n    setState(initialState);\n    fetchMovies(1, searchTerm);\n  }, [searchTerm]);\n\n  // Load More\n  useEffect(() => {\n    if (!isLoadingMore) return;\n\n    fetchMovies(state.page + 1, searchTerm);\n    setIsLoadingMore(false);\n  }, [isLoadingMore, searchTerm, state.page]);\n\n  // Write to sessionStorage\n  useEffect(() => {\n    if (!searchTerm) sessionStorage.setItem('homeState', JSON.stringify(state));\n  }, [searchTerm, state]);\n\n  return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore };\n};\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from 'react';\n// Config\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config';\n// Components\nimport HeroImage from './HeroImage';\nimport Grid from './Grid';\nimport Thumb from './Thumb';\nimport Spinner from './Spinner';\nimport SearchBar from './SearchBar';\nimport Button from './Button';\n\n// Hook\nimport { useHomeFetch } from '../hooks/useHomeFetch';\n// Image\nimport NoImage from '../images/no_image.jpg';\n\nconst Home = () => {\n  const {\n    state,\n    loading,\n    error,\n    searchTerm,\n    setSearchTerm,\n    setIsLoadingMore\n  } = useHomeFetch();\n\n  // console.log(state);\n\n  if (error) return <div>Something went wrong ...</div>;\n\n  return (\n    <>\n      {!searchTerm && state.results[0] ? (\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n          title={state.results[0].original_title}\n          text={state.results[0].overview}\n        />\n      ) : null}\n      <SearchBar setSearchTerm={setSearchTerm} />\n      <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\n        {state.results.map(movie => (\n          <Thumb\n            key={movie.id}\n            clickable\n            image={\n              movie.poster_path\n                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                : NoImage\n            }\n            movieId={movie.id}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {state.page < state.total_pages && !loading && (\n        <Button text='Load More' callback={() => setIsLoadingMore(true)} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 70px;\n  background: var(--medGrey);\n  color: var(--white);\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: var(--maxWidth);\n  padding: 0 20px;\n\n  span {\n    font-size: var(--fontMed);\n    color: var(--white);\n    padding-right: 10px;\n\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontSmall);\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n// Styles\nimport { Wrapper, Content } from './BreadCrumb.styles';\n\nconst BreadCrumb = ({ movieTitle }) => (\n  <Wrapper>\n    <Content>\n      <Link to='/'>\n        <span>Home</span>\n      </Link>\n      <span>|</span>\n      <span>{movieTitle}</span>\n    </Content>\n  </Wrapper>\n);\n\nBreadCrumb.propTypes = {\n  movieTitle: PropTypes.string\n};\n\nexport default BreadCrumb;\n","import React, { useState } from 'react';\n\nconst Rate = ({ callback }) => {\n  const [value, setValue] = useState(5);\n\n  return (\n    <div>\n      <input\n        type='range'\n        min='1'\n        max='10'\n        value={value}\n        onChange={e => setValue(e.currentTarget.value)}\n      />\n      {value}\n      <p>\n        <button onClick={() => callback(value)}>Rate</button>\n      </p>\n    </div>\n  );\n};\n\nexport default Rate;\n","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const Wrapper = styled.div`\n  background: ${({ backdrop }) =>\n    backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` : '#000'};\n  background-size: cover;\n  background-position: center;\n  padding: 40px 20px;\n  animation: animateMovieInfo 1s;\n\n  @keyframes {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n  background: rgba(0, 0, 0, 0.7);\n  border-radius: 20px;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n    max-height: none;\n  }\n`;\n\nexport const Text = styled.div`\n  width: 100%;\n  padding: 20px 40px;\n  color: var(--white);\n  overflow: hidden;\n\n  .rating-directors {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 50%;\n    margin: 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  h1 {\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport Thumb from '../Thumb';\nimport Rate from '../Rate';\n// Config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\n// Image\nimport NoImage from '../../images/no_image.jpg';\n// Styles\nimport { Wrapper, Content, Text } from './MovieInfo.styles';\n\nconst MovieInfo = ({ movie }) => (\n  <Wrapper backdrop={movie.backdrop_path}>\n    <Content>\n      <Thumb\n        image={\n          movie.poster_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n            : NoImage\n        }\n        clickable={false}\n        alt='movie-thumb'\n      />\n      <Text>\n        <h1>{movie.title}</h1>\n        <h3>PLOT</h3>\n        <p>{movie.overview}</p>\n\n        <div className='rating-directors'>\n          <div>\n            <h3>RATING</h3>\n            <div className='score'>{movie.vote_average}</div>\n          </div>\n          <div className='director'>\n            <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\n            {movie.directors.map(director => (\n              <p key={director.credit_id}>{director.name}</p>\n            ))}\n          </div>\n        </div>\n        <div>\n          <p>Rate Movie</p>\n          <Rate />\n        </div>\n      </Text>\n    </Content>\n  </Wrapper>\n);\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object\n}\n\nexport default MovieInfo;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: var(--maxWidth);\n  width: 100%;\n  margin: 0 auto;\n\n  .column {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--medGrey);\n    border-radius: 20px;\n    margin: 0 20px;\n    flex: 1;\n\n    :first-child {\n      margin-left: 0;\n    }\n\n    :last-child {\n      margin-right: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    display: block;\n\n    .column {\n      margin: 20px 0;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Helpers\nimport { calcTime, convertMoney } from '../../helpers';\n// Styles\nimport { Wrapper, Content } from './MovieInfoBar.styles';\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n  <Wrapper>\n    <Content>\n      <div className='column'>\n        <p>Running time: {calcTime(time)}</p>\n      </div>\n      <div className='column'>\n        <p>Budget: {convertMoney(budget)}</p>\n      </div>\n      <div className='column'>\n        <p>Revenue: {convertMoney(revenue)}</p>\n      </div>\n    </Content>\n  </Wrapper>\n);\n\nMovieInfoBar.propTypes = {\n  time: PropTypes.number,\n  budget: PropTypes.number,\n  revenue: PropTypes.number\n};\n\nexport default MovieInfoBar;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  color: var(--white);\n  background: var(--darkGrey);\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  h3 {\n    margin: 10px 0 0 0;\n  }\n\n  p {\n    margin: 5px 0;\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 15px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Styles\nimport { Wrapper, Image } from './Actor.styles';\n\nconst Actor = ({ name, character, imageUrl }) => (\n  <Wrapper>\n    <Image src={imageUrl} alt='actor-thumb' />\n    <h3>{name}</h3>\n    <p>{character}</p>\n  </Wrapper>\n);\n\nActor.propTypes = {\n  name: PropTypes.string,\n  character: PropTypes.string,\n  imageUrl: PropTypes.string,\n}\n\nexport default Actor;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n// Config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\n// Components\nimport BreadCrumb from './BreadCrumb';\nimport Grid from './Grid';\nimport Spinner from './Spinner';\nimport MovieInfo from './MovieInfo';\nimport MovieInfoBar from './MovieInfoBar';\nimport Actor from './Actor';\n// Hook\nimport { useMovieFetch } from '../hooks/useMovieFetch';\n// Image\nimport NoImage from '../images/no_image.jpg';\n\nconst Movie = () => {\n  const { movieId } = useParams();\n\n  const { state: movie, loading, error } = useMovieFetch(movieId);\n\n  if (loading) return <Spinner />;\n  if (error) return <div>Something went wrong...</div>;\n\n  return (\n    <>\n      <BreadCrumb movieTitle={movie.original_title} />\n      <MovieInfo movie={movie} />\n      <MovieInfoBar\n        time={movie.runtime}\n        budget={movie.budget}\n        revenue={movie.revenue}\n      />\n      <Grid header='Actors'>\n        {movie.actors.map(actor => (\n          <Actor\n            key={actor.credit_id}\n            name={actor.name}\n            character={actor.character}\n            imageUrl={\n              actor.profile_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n                : NoImage\n            }\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Movie;\n","import { useState, useEffect } from 'react';\nimport API from '../API';\n// Helpers\nimport { isPersistedState } from '../helpers';\n\nexport const useMovieFetch = movieId => {\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n\n        const movie = await API.fetchMovie(movieId);\n        const credits = await API.fetchCredits(movieId);\n        // Get directors only\n        const directors = credits.crew.filter(\n          member => member.job === 'Director'\n        );\n\n        setState({\n          ...movie,\n          actors: credits.cast,\n          directors\n        });\n\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n      }\n    };\n\n    const sessionState = isPersistedState(movieId);\n\n    if (sessionState) {\n      setState(sessionState);\n      setLoading(false);\n      return;\n    }\n\n    fetchMovie();\n  }, [movieId]);\n\n  // Write to sessionStorage\n  useEffect(() => {\n    sessionStorage.setItem(movieId, JSON.stringify(state));\n  }, [movieId, state]);\n\n  return { state, loading, error };\n};\n","import React from 'react';\n\nconst NotFound = () => <div>NotFound</div>;\n\nexport default NotFound;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin: 0 auto;\n  max-width: 320px;\n  padding: 20px;\n  color: var(--darkGrey);\n\n  input {\n    width: 100%;\n    height: 30px;\n    border: 1px solid var(--darkGrey);\n    border-radius: 20px;\n    margin: 10px 0;\n    padding: 10px;\n  }\n\n  .error {\n    color: red;\n  }\n`;\n","import React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport API from '../API';\n// Components\nimport Button from './Button';\n// Styles\nimport { Wrapper } from './Login.styles';\n// Context\nimport { Context } from '../context';\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(false);\n\n  const [_user, setUser] = useContext(Context);\n  const navigate = useNavigate();\n\n  const handleSubmit = async () => {\n    setError(false);\n    try {\n      const requestToken = await API.getRequestToken();\n      const sessionId = await API.authenticate(\n        requestToken,\n        username,\n        password\n      );\n      console.log(sessionId);\n      setUser({ sessionId: sessionId.session_id, username });\n\n      navigate('/');\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  const handleInput = e => {\n    const name = e.currentTarget.name;\n    const value = e.currentTarget.value;\n\n    if (name === 'username') setUsername(value);\n    if (name === 'password') setPassword(value);\n  };\n\n  return (\n    <Wrapper>\n      {error && <div className='error'>There was an error!</div>}\n      <label>Username:</label>\n      <input\n        type='text'\n        value={username}\n        name='username'\n        onChange={handleInput}\n      />\n      <input\n        type='password'\n        value={password}\n        name='password'\n        onChange={handleInput}\n      />\n      <Button text='Login' callback={handleSubmit} />\n    </Wrapper>\n  );\n};\n\nexport default Login;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --maxWidth: 1280px;\n    --white: #fff;\n    --lightGrey: #eee;\n    --medGrey: #353535;\n    --darkGrey: #1c1c1c;\n    --fontSuperBig: 2.5rem;\n    --fontBig: 1.5rem;\n    --fontMed: 1.2rem;\n    --fontSmall: 1rem;\n  }\n\n  * {\n    box-sizing: border-box;\n    font-family: 'Abel', sans-serif;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    \n    h1 {\n      font-size: 2rem;\n      font-weight: 600;\n      color: var(--white);\n    }\n\n    h3 {\n      font-size: 1.1rem;\n      font-weight: 600;\n    }\n\n    p {\n      font-size: 1rem;\n      color: var(--white);\n    }\n  }\n`;\n","import React from 'react';\n// Routing\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// Components\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport NotFound from './components/NotFound';\nimport Login from './components/Login';\n// Context\nimport UserProvider from './context';\n// Styles\nimport { GlobalStyle } from './GlobalStyle';\n\nconst App = () => (\n  <Router>\n    <UserProvider>\n      <Header />\n      <Routes>\n        <Route path='/' element={<Home />} />\n        <Route path='/login' element={<Login />} />\n        <Route path='/:movieId' element={<Movie />} />\n        <Route path='/*' element={<NotFound />} />\n      </Routes>\n      <GlobalStyle />\n    </UserProvider>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}